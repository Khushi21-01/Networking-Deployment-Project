name: CI/CD Build and Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ github.sha }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE ./sample-application

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

  deploy:
    needs: build
    runs-on: ubuntu-latest

    env:
      PUBLIC_IP: ${{ secrets.HOST }}
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Ansible & dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible python3-pip
          pip3 install docker packaging

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Generate dynamic inventory
        run: |
          echo "[azure_vm]" > inventory.ini
          echo "${{ secrets.HOST }} ansible_user=azureuser ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3" >> inventory.ini

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini ansible/docker.yml -e "docker_image=${DOCKER_IMAGE}"
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
